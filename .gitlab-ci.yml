image: maven:3-eclipse-temurin-17

services:
  - name: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    alias: elasticsearch
    entrypoint: [ "/bin/bash", "-c" ]
    command:
        - |
          export ES_JAVA_OPTS="-Xms512m -Xmx512m";
          exec elasticsearch -Ediscovery.type=single-node -Expack.security.enabled=false

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  MAVEN_OPTS: "-DskipTests=false"
  #SPRING_DATA_ELASTICSEARCH_CLIENT_REACTIVE_ENDPOINTS: "elasticsearch:9200"

  # Or override spring properties directly if needed
  SPRING_DATA_ELASTICSEARCH_CLIENT_REST_URIS: "http://elasticsearch:9200"

stages:
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report

build:
  stage: test
  script:
#    - until curl -s elasticsearch:9200 | grep -q "You Know, for Search"; do echo "Waiting for Elasticsearch..."; sleep 5; done
    - mvn clean install
  artifacts:
    paths:
      - target/*.jar

run_tests:
  stage: test
  script:
#    - until curl -s elasticsearch:9200 | grep -q "You Know, for Search"; do echo "Waiting for Elasticsearch..."; sleep 5; done
    - mvn clean test
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
    when: always
  dependencies:
    - build

run_coverage:
  stage: test
  script:
#    - until curl -s elasticsearch:9200 | grep -q "You Know, for Search"; do echo "Waiting for Elasticsearch..."; sleep 5; done
    - mvn jacoco:report
  artifacts:
    paths:
      - target/site/jacoco
  dependencies:
    - run_tests

sonarqube-check:
  stage: sonarqube-check
  dependencies:
    - run_coverage
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey="${SONAR_PROJECT_KEY}" -Dsonar.host.url="${SONAR_HOST_URL}" -Dsonar.token="${SONAR_TOKEN}"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=${CI_PROJECT_NAME}&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check